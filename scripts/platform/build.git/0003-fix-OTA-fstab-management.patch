From c3d0c89af50e489a1a1e29f08a95683b8866bd8c Mon Sep 17 00:00:00 2001
From: varigigi <pierluigi.p@variscite.com>
Date: Fri, 21 Jul 2017 20:58:47 +0200
Subject: [PATCH] fix OTA fstab management

The build system is currently hardcoding only one OTA fstab,
but DART-MX6 has a different fstab from all the other VAR-SOM.
Do not specify it at all: while building OTA package,
check the current dtb and select the right fstab.
---
 core/Makefile                | 13 +++++++++++++
 tools/releasetools/common.py |  4 ++--
 2 files changed, 15 insertions(+), 2 deletions(-)

diff --git a/core/Makefile b/core/Makefile
index 7f2676d..fbddd64 100644
--- a/core/Makefile
+++ b/core/Makefile
@@ -1726,8 +1726,10 @@ ifeq ($(TARGET_NO_KERNEL),true)
 build_ota_package := false
 endif
 ifeq ($(recovery_fstab),)
+ifneq ($(PRODUCT_MODEL),VAR_SOM_MX6)
 build_ota_package := false
 endif
+endif
 ifeq ($(TARGET_BUILD_PDK),true)
 build_ota_package := false
 endif
@@ -2144,9 +2146,20 @@ otapackage:
 		export DTS_PLATFORM=`echo $$dtsplat | cut -d':' -f1`; \
 		DTS_BOARD=`echo $$dtsplat | cut -d':' -f2`; \
 		export BOARD_KERNEL_DTS="$(PRODUCT_OUT)/$$DTS_BOARD" ; \
+		if [ "$(PRODUCT_MODEL)" == "VAR_SOM_MX6" ]; then \
+			if [ "$$DTS_PLATFORM" == "imx6q-var-dart" ]; then \
+				export TARGET_OTA_FSTAB=/fstab.var-dart-mx6 ; \
+			else \
+				export TARGET_OTA_FSTAB=/fstab.var-som-mx6 ; \
+			fi; \
+			echo "OTA FSTAB: $$DTS_PLATFORM => $$TARGET_OTA_FSTAB"; \
+		fi; \
 		make otagenerate; \
 		OTA_PACKAGE_BOARD=$(patsubst %.zip,%-$$DTS_PLATFORM.zip,$(INTERNAL_OTA_PACKAGE_TARGET)); \
 		cp -f $(INTERNAL_OTA_PACKAGE_TARGET) $$OTA_PACKAGE_BOARD; \
+		if [ "$(PRODUCT_MODEL)" == "VAR_SOM_MX6" ]; then \
+			unset TARGET_OTA_FSTAB; \
+		fi; \
 	done
 
 
diff --git a/tools/releasetools/common.py b/tools/releasetools/common.py
index 1a88302..5c954f6 100644
--- a/tools/releasetools/common.py
+++ b/tools/releasetools/common.py
@@ -261,11 +261,11 @@ def LoadInfoDict(input_file, input_dir=None):
 
   system_root_image = d.get("system_root_image", None) == "true"
   if d.get("no_recovery", None) != "true":
-    recovery_fstab_path = "RECOVERY/RAMDISK/etc/recovery.fstab"
+    recovery_fstab_path = "RECOVERY/RAMDISK" + (os.getenv('TARGET_OTA_FSTAB') or "/etc/recovery.fstab")
     d["fstab"] = LoadRecoveryFSTab(read_helper, d["fstab_version"],
         recovery_fstab_path, system_root_image)
   elif d.get("recovery_as_boot", None) == "true":
-    recovery_fstab_path = "BOOT/RAMDISK/etc/recovery.fstab"
+    recovery_fstab_path = "BOOT/RAMDISK" + (os.getenv('TARGET_OTA_FSTAB') or "/etc/recovery.fstab")
     d["fstab"] = LoadRecoveryFSTab(read_helper, d["fstab_version"],
         recovery_fstab_path, system_root_image)
   else:
-- 
2.7.4

