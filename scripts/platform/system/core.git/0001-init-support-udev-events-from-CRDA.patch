From 4cfc842272da1f6ce973b1c049bcde2d74740862 Mon Sep 17 00:00:00 2001
From: Vishal Mahaveer <vishalm@ti.com>
Date: Fri, 13 Jul 2012 14:55:52 -0500
Subject: [PATCH 1/3] init: support udev events from CRDA

correctly parse the COUNTRY env variable and pass it to the crda daemon
when a CRDA related messages is received

Author: Arik Nemtsov <arik@wizery.com>
Signed-off-by: Vishal Mahaveer <vishalm@ti.com>

[Ported to JB MR2 and squashed with following changes]

[Vishal Mahaveer <vishalm@ti.com>]
   init: better filter country events for CRDA

Change-Id: I6d0b97ca8f53654d7af30c4bf7f186cf38094ae8
Signed-off-by: Vishal Mahaveer <vishalm@ti.com>
---
 init/devices.cpp | 49 +++++++++++++++++++++++++++++++++++++++++++++++--
 1 file changed, 47 insertions(+), 2 deletions(-)

diff --git a/init/devices.cpp b/init/devices.cpp
index cffc561..ede3c43 100644
--- a/init/devices.cpp
+++ b/init/devices.cpp
@@ -65,6 +65,8 @@ struct uevent {
     const char *firmware;
     const char *partition_name;
     const char *device_name;
+    const char *country;
+    const char *modalias;
     int partition_num;
     int major;
     int minor;
@@ -368,6 +370,8 @@ static void parse_event(const char *msg, struct uevent *uevent)
     uevent->path = "";
     uevent->subsystem = "";
     uevent->firmware = "";
+    uevent->country = "";
+    uevent->modalias = "";
     uevent->major = -1;
     uevent->minor = -1;
     uevent->partition_name = NULL;
@@ -403,6 +407,12 @@ static void parse_event(const char *msg, struct uevent *uevent)
         } else if(!strncmp(msg, "DEVNAME=", 8)) {
             msg += 8;
             uevent->device_name = msg;
+        } else if (!strncmp(msg, "COUNTRY=", 8)) {
+            msg += 8;
+            uevent->country = msg;
+        } else if (!strncmp(msg, "MODALIAS=", 9)) {
+            msg += 9;
+            uevent->modalias = msg;
         }
 
         /* advance to after the next \0 */
@@ -411,9 +421,10 @@ static void parse_event(const char *msg, struct uevent *uevent)
     }
 
     if (LOG_UEVENTS) {
-        INFO("event { '%s', '%s', '%s', '%s', %d, %d }\n",
+        INFO("event { '%s', '%s', '%s', '%s', %d, %d, '%s', '%s'}\n",
              uevent->action, uevent->path, uevent->subsystem,
-             uevent->firmware, uevent->major, uevent->minor);
+             uevent->firmware, uevent->major, uevent->minor,
+             uevent->country, uevent->modalias);
     }
 }
 
@@ -872,6 +883,39 @@ root_free_out:
     free(root);
 }
 
+static void handle_crda_event(struct uevent *uevent)
+{
+    int status;
+    int ret;
+    pid_t pid;
+    char country_env[128];
+    char crda_path[] = "/system/bin/crda";
+    char *argv[] = { crda_path, NULL };
+    char *envp[] = { country_env, NULL };
+
+    if(strcmp(uevent->subsystem, "platform"))
+        return;
+
+    if(strcmp(uevent->action, "change"))
+        return;
+
+    if(strcmp(uevent->modalias, "platform:regulatory"))
+        return;
+
+    INFO("executing CRDA country=%s\n", uevent->country);
+    sprintf(country_env, "COUNTRY=%s", uevent->country);
+
+    pid = fork();
+    if (!pid) {
+        if (-1 == execve(argv[0], argv, envp))
+            exit(1);
+    } else if (pid != -1) {
+        do {
+            ret = waitpid(pid, &status, 0);
+        } while (ret == -1 && errno == EINTR);
+    }
+}
+
 static void handle_firmware_event(struct uevent *uevent)
 {
     pid_t pid;
@@ -918,6 +962,7 @@ void handle_device_fd()
 
         handle_device_event(&uevent);
         handle_firmware_event(&uevent);
+        handle_crda_event(&uevent);
     }
 }
 
-- 
2.7.4

